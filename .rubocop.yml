# The behavior of RuboCop can be controlled via the .rubocop.yml
# configuration file. It makes it possible to enable/disable
# certain cops (checks) and to alter their behavior if they accept
# any parameters. The file can be placed either in your home
# directory or in some project directory.
#
# RuboCop will start looking for the configuration file in the directory
# where the inspected file is and continue its way up to the root directory.
#
# See https://docs.rubocop.org/rubocop/configuration

require: rubocop-rails   # 必須

AllCops:
  # 新ルールを有効化
  NewCops: enable
  SuggestExtensions: false
  # 除外するディレクトリ（自動生成されるファイル）
  Exclude:
    - 'vendor/**/*'
    - 'db/**/*'
    - 'config/**/*'
    - 'bin/*'
    - 'spec/**/*'
    - 'node_modules/**/*'
    - 'config.ru'
    - 'Gemfile'
    - 'Rakefile'
  DisplayCopNames: true

# 1行あたりの文字数をチェック（無効）
Layout/LineLength:
  Enabled: false

Metrics/AbcSize:
  Max: 25

Metrics/BlockLength:
  Max: 30
  Exclude:
    - 'Gemfile'
    - 'config/**/*'
    - 'spec/**/*_spec.rb'

# クラスの行数をチェック
Metrics/ClassLength:
  CountComments: false
  Max: 300

Metrics/CyclomaticComplexity:
  Max: 30

# メソッドの行数を30行までに変更
Metrics/MethodLength:
  CountComments: false
  Max: 30

Naming/AccessorMethodName:
  Exclude:
    - 'app/controllers/**/*'

# 日本語でのコメントを許可
Style/AsciiComments:
  Enabled: false

# モジュール名::クラス名の定義を許可
Style/ClassAndModuleChildren:
  Enabled: false

# クラスのコメント必須を無視
Style/Documentation:
  Enabled: false

# 「frozen_string_literal: true」を追加しない
Style/FrozenStringLiteralComment:
  Enabled: false

Style/IfUnlessModifier:
  Enabled: false

Style/WhileUntilModifier:
  Enabled: false

Style/HashEachMethods:
  Enabled: false

Style/HashTransformKeys:
  Enabled: false

Style/HashTransformValues:
  Enabled: false

Bundler/OrderedGems:
  Enabled: false
